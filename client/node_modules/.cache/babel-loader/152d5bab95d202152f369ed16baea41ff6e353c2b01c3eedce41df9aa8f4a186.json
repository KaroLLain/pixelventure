{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pulpit\\\\pixelventures\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './index.css';\nimport PixelVenturesContainer from './PixelVenturesContainer/PixelVentureContainer';\nimport { GET_SCREEN_INDEX } from './utilities/commonUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.return( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(PixelVenturesContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n}\n_s(App, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","PixelVenturesContainer","GET_SCREEN_INDEX","jsxDEV","_jsxDEV","App","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","ScrollService","return","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Pulpit/pixelventures/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './index.css';\nimport PixelVenturesContainer from './PixelVenturesContainer/PixelVentureContainer'\nimport { GET_SCREEN_INDEX } from './utilities/commonUtils';\n\nexport default function App() {\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n\n  const updateCurrentScreen = (currentScreen) => {\n    if(!currentScreen || currentScreen.screenInView)\n      return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n    if(screenIndex < 0)\n      return;\n  }\n\n  let currentScreenSubscription = ScrollService.\n\n  return (\n    <div className='App'>\n        <PixelVenturesContainer/>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AACpB,OAAOC,sBAAsB,MAAM,gDAAgD;AACnF,SAASC,gBAAgB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAGjE,MAAMW,mBAAmB,GAAIC,aAAa,IAAK;IAC7C,IAAG,CAACA,aAAa,IAAIA,aAAa,CAACC,YAAY,EAC7C;IACF,IAAIC,WAAW,GAAGZ,gBAAgB,CAACU,aAAa,CAACC,YAAY,CAAC;IAC9D,IAAGC,WAAW,GAAG,CAAC,EAChB;EACJ,CAAC;EAED,IAAIC,yBAAyB,GAAGC,aAAa,CAE7CC,MAAM,eACJb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBf,OAAA,CAACH,sBAAsB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CACP,CAAC;AACH;AAACjB,EAAA,CApBuBD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
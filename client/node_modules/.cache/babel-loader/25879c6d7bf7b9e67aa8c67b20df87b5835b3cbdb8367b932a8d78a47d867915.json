{"ast":null,"code":"var _ScrollService;\nimport { TOTAL__SCREENS } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nexport default class ScrollService {\n  constructor() {\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientReact();\n      let elementTop = rec.top;\n      let elementBottom = rec.Bottom;\n      let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\n      let comlpletelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n        case \"complete\":\n          return comlpletelyVisible;\n        default:\n          return false;\n      }\n    };\n    this.checkCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n      for (let screen of TOTAL__SCREENS) {\n        let screenFromDOM = document.getElementById(screen.screen_name);\n        if (!screenFromDOM) continue;\n        let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\n        let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\n        if (fullyVisible || partiallyVisible) {\n          if (partiallyVisible && !screen.alreadyRendered) {\n            ScrollService.currentScreenFadeIn.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen['alreadyRendered'] = true;\n            break;\n          }\n          if (fullyVisible) {\n            ScrollService.currentScreenBroadCaster.next({\n              screenInView: screen.screen_name\n            });\n            break;\n          }\n        }\n      }\n    };\n    window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\n  }\n}\n_ScrollService = ScrollService;\nScrollService.scrollHandler = new _ScrollService();\nScrollService.currentScreenBroadCaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL__SCREENS","Subject","ScrollService","constructor","isElementInView","elem","type","rec","getBoundingClientReact","elementTop","top","elementBottom","Bottom","partiallyVisible","window","innerHeight","comlpletelyVisible","checkCurrentScreenUnderViewport","event","Object","keys","length","screen","screenFromDOM","document","getElementById","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadCaster","screenInView","addEventListener","_ScrollService","scrollHandler"],"sources":["D:/Pulpit/pixelventures/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL__SCREENS } from \"./commonUtils\";\r\n\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport default class ScrollService{\r\n    static scrollHandler = new ScrollService();\r\n\r\n    static currentScreenBroadCaster = new Subject();\r\n    static currentScreenFadeIn = new Subject();\r\n\r\n    constructor() {\r\n        window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\r\n    }\r\n\r\n    isElementInView = (elem, type) => {\r\n        let rec = elem.getBoundingClientReact();\r\n        let elementTop = rec.top;\r\n        let elementBottom = rec.Bottom;\r\n        \r\n        let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\r\n        let comlpletelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\r\n\r\n        switch(type) {\r\n            case \"partial\":\r\n                return partiallyVisible;\r\n\r\n            case \"complete\":\r\n                return comlpletelyVisible\r\n                default: \r\n                return false;\r\n        }\r\n    }\r\n\r\n    checkCurrentScreenUnderViewport = (event)=> {\r\n        if(!event || Object.keys(event).length < 1)\r\n            return;\r\n         for(let screen of TOTAL__SCREENS) {\r\n            let screenFromDOM = document.getElementById(screen.screen_name);\r\n            if(!screenFromDOM)\r\n                continue;\r\n\r\n            let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\r\n            let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\r\n\r\n\r\n            if(fullyVisible || partiallyVisible){\r\n                if(partiallyVisible && !screen.alreadyRendered) {\r\n                    ScrollService.currentScreenFadeIn.next({\r\n                        fadeInScreen: screen.screen_name,\r\n                    });\r\n                    screen['alreadyRendered'] = true;\r\n                    break;\r\n                }\r\n                if(fullyVisible) {\r\n                    ScrollService.currentScreenBroadCaster.next({\r\n                        screenInView: screen.screen_name,\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n         }\r\n    }\r\n\r\n}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,eAAe;AAE9C,SAASC,OAAO,QAAQ,MAAM;AAE9B,eAAe,MAAMC,aAAa;EAM9BC,WAAWA,CAAA,EAAG;IAAA,KAIdC,eAAe,GAAG,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC9B,IAAIC,GAAG,GAAGF,IAAI,CAACG,sBAAsB,CAAC,CAAC;MACvC,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAAG;MACxB,IAAIC,aAAa,GAAGJ,GAAG,CAACK,MAAM;MAE9B,IAAIC,gBAAgB,GAAGJ,UAAU,GAAGK,MAAM,CAACC,WAAW,IAAIJ,aAAa,IAAI,CAAC;MAC5E,IAAIK,kBAAkB,GAAGP,UAAU,IAAI,CAAC,IAAIE,aAAa,IAAIG,MAAM,CAACC,WAAW;MAE/E,QAAOT,IAAI;QACP,KAAK,SAAS;UACV,OAAOO,gBAAgB;QAE3B,KAAK,UAAU;UACX,OAAOG,kBAAkB;QACzB;UACA,OAAO,KAAK;MACpB;IACJ,CAAC;IAAA,KAEDC,+BAA+B,GAAIC,KAAK,IAAI;MACxC,IAAG,CAACA,KAAK,IAAIC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,MAAM,GAAG,CAAC,EACtC;MACH,KAAI,IAAIC,MAAM,IAAItB,cAAc,EAAE;QAC/B,IAAIuB,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAACH,MAAM,CAACI,WAAW,CAAC;QAC/D,IAAG,CAACH,aAAa,EACb;QAEJ,IAAII,YAAY,GAAG,IAAI,CAACvB,eAAe,CAACmB,aAAa,EAAE,UAAU,CAAC;QAClE,IAAIV,gBAAgB,GAAG,IAAI,CAACT,eAAe,CAACmB,aAAa,EAAE,SAAS,CAAC;QAGrE,IAAGI,YAAY,IAAId,gBAAgB,EAAC;UAChC,IAAGA,gBAAgB,IAAI,CAACS,MAAM,CAACM,eAAe,EAAE;YAC5C1B,aAAa,CAAC2B,mBAAmB,CAACC,IAAI,CAAC;cACnCC,YAAY,EAAET,MAAM,CAACI;YACzB,CAAC,CAAC;YACFJ,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI;YAChC;UACJ;UACA,IAAGK,YAAY,EAAE;YACbzB,aAAa,CAAC8B,wBAAwB,CAACF,IAAI,CAAC;cACxCG,YAAY,EAAEX,MAAM,CAACI;YACzB,CAAC,CAAC;YACF;UACJ;QACJ;MACH;IACL,CAAC;IAlDGZ,MAAM,CAACoB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACjB,+BAA+B,CAAC;EAC3E;AAmDJ;AAACkB,cAAA,GA3DoBjC,aAAa;AAAbA,aAAa,CACvBkC,aAAa,GAAG,IAAIlC,cAAa,CAAC,CAAC;AADzBA,aAAa,CAGvB8B,wBAAwB,GAAG,IAAI/B,OAAO,CAAC,CAAC;AAH9BC,aAAa,CAIvB2B,mBAAmB,GAAG,IAAI5B,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}